syntax = "proto3";
package archive.contractregistry;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "contractregistry/params.proto";
import "contractregistry/contract.proto";
// this line is used by starport scaffolding # 1

option go_package = "archive/x/contractregistry/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/archive/contractregistry/params";
  }
  rpc Contract(QueryContractRequest) returns (QueryContractResponse) {
    option (google.api.http).get = "/archive/contractregistry/contract";
  }
  rpc Contracts(QueryContractsRequest) returns (QueryContractsResponse) {
    option (google.api.http).get = "/archive/contractregistry/contracts";
  }
  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryContractRequest is the request type for the Query/Contract RPC method.
message QueryContractRequest {
    uint64 id = 1;
}

// QueryContractResponse is the response type for the Query/Contract RPC method.
message QueryContractResponse {
    Contract contract = 1 [(gogoproto.nullable) = false];
}

message QueryContractsRequest {
    // pagination defines an optional pagination for the request.
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryContractResponse is the response type for the Query/Contract RPC method.
message QueryContractsResponse {
    // the ids of the contracts registered
    repeated Contract contracts = 1 [(gogoproto.nullable) = false];
    
    // pagination defines the pagination in the response.
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
