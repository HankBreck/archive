// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: archive/identity/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRegisterIssuer struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MoreInfoUri string `protobuf:"bytes,3,opt,name=more_info_uri,json=moreInfoUri,proto3" json:"more_info_uri,omitempty"`
	Cost        uint64 `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (m *MsgRegisterIssuer) Reset()         { *m = MsgRegisterIssuer{} }
func (m *MsgRegisterIssuer) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterIssuer) ProtoMessage()    {}
func (*MsgRegisterIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{0}
}
func (m *MsgRegisterIssuer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterIssuer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterIssuer.Merge(m, src)
}
func (m *MsgRegisterIssuer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterIssuer proto.InternalMessageInfo

func (m *MsgRegisterIssuer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterIssuer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgRegisterIssuer) GetMoreInfoUri() string {
	if m != nil {
		return m.MoreInfoUri
	}
	return ""
}

func (m *MsgRegisterIssuer) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

type MsgRegisterIssuerResponse struct {
}

func (m *MsgRegisterIssuerResponse) Reset()         { *m = MsgRegisterIssuerResponse{} }
func (m *MsgRegisterIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterIssuerResponse) ProtoMessage()    {}
func (*MsgRegisterIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{1}
}
func (m *MsgRegisterIssuerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterIssuerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterIssuerResponse.Merge(m, src)
}
func (m *MsgRegisterIssuerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterIssuerResponse proto.InternalMessageInfo

type MsgIssueCertificate struct {
	Creator           string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Recipient         string       `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Salt              string       `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	MetadataSchemaUri string       `protobuf:"bytes,4,opt,name=metadata_schema_uri,json=metadataSchemaUri,proto3" json:"metadata_schema_uri,omitempty"`
	Hashes            []*HashEntry `protobuf:"bytes,5,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (m *MsgIssueCertificate) Reset()         { *m = MsgIssueCertificate{} }
func (m *MsgIssueCertificate) String() string { return proto.CompactTextString(m) }
func (*MsgIssueCertificate) ProtoMessage()    {}
func (*MsgIssueCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{2}
}
func (m *MsgIssueCertificate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIssueCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIssueCertificate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIssueCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIssueCertificate.Merge(m, src)
}
func (m *MsgIssueCertificate) XXX_Size() int {
	return m.Size()
}
func (m *MsgIssueCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIssueCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIssueCertificate proto.InternalMessageInfo

func (m *MsgIssueCertificate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgIssueCertificate) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgIssueCertificate) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *MsgIssueCertificate) GetMetadataSchemaUri() string {
	if m != nil {
		return m.MetadataSchemaUri
	}
	return ""
}

func (m *MsgIssueCertificate) GetHashes() []*HashEntry {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type MsgIssueCertificateResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgIssueCertificateResponse) Reset()         { *m = MsgIssueCertificateResponse{} }
func (m *MsgIssueCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgIssueCertificateResponse) ProtoMessage()    {}
func (*MsgIssueCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{3}
}
func (m *MsgIssueCertificateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIssueCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIssueCertificateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIssueCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIssueCertificateResponse.Merge(m, src)
}
func (m *MsgIssueCertificateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgIssueCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIssueCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIssueCertificateResponse proto.InternalMessageInfo

func (m *MsgIssueCertificateResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgAcceptIdentity struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgAcceptIdentity) Reset()         { *m = MsgAcceptIdentity{} }
func (m *MsgAcceptIdentity) String() string { return proto.CompactTextString(m) }
func (*MsgAcceptIdentity) ProtoMessage()    {}
func (*MsgAcceptIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{4}
}
func (m *MsgAcceptIdentity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcceptIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcceptIdentity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcceptIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcceptIdentity.Merge(m, src)
}
func (m *MsgAcceptIdentity) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcceptIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcceptIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcceptIdentity proto.InternalMessageInfo

func (m *MsgAcceptIdentity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAcceptIdentity) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgAcceptIdentityResponse struct {
}

func (m *MsgAcceptIdentityResponse) Reset()         { *m = MsgAcceptIdentityResponse{} }
func (m *MsgAcceptIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAcceptIdentityResponse) ProtoMessage()    {}
func (*MsgAcceptIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{5}
}
func (m *MsgAcceptIdentityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcceptIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcceptIdentityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcceptIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcceptIdentityResponse.Merge(m, src)
}
func (m *MsgAcceptIdentityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcceptIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcceptIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcceptIdentityResponse proto.InternalMessageInfo

type MsgRejectIdentity struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRejectIdentity) Reset()         { *m = MsgRejectIdentity{} }
func (m *MsgRejectIdentity) String() string { return proto.CompactTextString(m) }
func (*MsgRejectIdentity) ProtoMessage()    {}
func (*MsgRejectIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{6}
}
func (m *MsgRejectIdentity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRejectIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRejectIdentity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRejectIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRejectIdentity.Merge(m, src)
}
func (m *MsgRejectIdentity) XXX_Size() int {
	return m.Size()
}
func (m *MsgRejectIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRejectIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRejectIdentity proto.InternalMessageInfo

func (m *MsgRejectIdentity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRejectIdentity) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRejectIdentityResponse struct {
}

func (m *MsgRejectIdentityResponse) Reset()         { *m = MsgRejectIdentityResponse{} }
func (m *MsgRejectIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRejectIdentityResponse) ProtoMessage()    {}
func (*MsgRejectIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{7}
}
func (m *MsgRejectIdentityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRejectIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRejectIdentityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRejectIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRejectIdentityResponse.Merge(m, src)
}
func (m *MsgRejectIdentityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRejectIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRejectIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRejectIdentityResponse proto.InternalMessageInfo

type MsgRenounceIdentity struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRenounceIdentity) Reset()         { *m = MsgRenounceIdentity{} }
func (m *MsgRenounceIdentity) String() string { return proto.CompactTextString(m) }
func (*MsgRenounceIdentity) ProtoMessage()    {}
func (*MsgRenounceIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{8}
}
func (m *MsgRenounceIdentity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenounceIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenounceIdentity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenounceIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenounceIdentity.Merge(m, src)
}
func (m *MsgRenounceIdentity) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenounceIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenounceIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenounceIdentity proto.InternalMessageInfo

func (m *MsgRenounceIdentity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRenounceIdentity) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRenounceIdentityResponse struct {
}

func (m *MsgRenounceIdentityResponse) Reset()         { *m = MsgRenounceIdentityResponse{} }
func (m *MsgRenounceIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRenounceIdentityResponse) ProtoMessage()    {}
func (*MsgRenounceIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{9}
}
func (m *MsgRenounceIdentityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenounceIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenounceIdentityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenounceIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenounceIdentityResponse.Merge(m, src)
}
func (m *MsgRenounceIdentityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenounceIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenounceIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenounceIdentityResponse proto.InternalMessageInfo

type MsgUpdateOperators struct {
	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ToAdd    []string `protobuf:"bytes,3,rep,name=toAdd,proto3" json:"toAdd,omitempty"`
	ToRemove []string `protobuf:"bytes,4,rep,name=toRemove,proto3" json:"toRemove,omitempty"`
}

func (m *MsgUpdateOperators) Reset()         { *m = MsgUpdateOperators{} }
func (m *MsgUpdateOperators) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOperators) ProtoMessage()    {}
func (*MsgUpdateOperators) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{10}
}
func (m *MsgUpdateOperators) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOperators) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOperators.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOperators) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOperators.Merge(m, src)
}
func (m *MsgUpdateOperators) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOperators) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOperators.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOperators proto.InternalMessageInfo

func (m *MsgUpdateOperators) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateOperators) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateOperators) GetToAdd() []string {
	if m != nil {
		return m.ToAdd
	}
	return nil
}

func (m *MsgUpdateOperators) GetToRemove() []string {
	if m != nil {
		return m.ToRemove
	}
	return nil
}

type MsgUpdateOperatorsResponse struct {
}

func (m *MsgUpdateOperatorsResponse) Reset()         { *m = MsgUpdateOperatorsResponse{} }
func (m *MsgUpdateOperatorsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOperatorsResponse) ProtoMessage()    {}
func (*MsgUpdateOperatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{11}
}
func (m *MsgUpdateOperatorsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOperatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOperatorsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOperatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOperatorsResponse.Merge(m, src)
}
func (m *MsgUpdateOperatorsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOperatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOperatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOperatorsResponse proto.InternalMessageInfo

type MsgUpdateMembers struct {
	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ToAdd    []string `protobuf:"bytes,3,rep,name=toAdd,proto3" json:"toAdd,omitempty"`
	ToRemove []string `protobuf:"bytes,4,rep,name=toRemove,proto3" json:"toRemove,omitempty"`
}

func (m *MsgUpdateMembers) Reset()         { *m = MsgUpdateMembers{} }
func (m *MsgUpdateMembers) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMembers) ProtoMessage()    {}
func (*MsgUpdateMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{12}
}
func (m *MsgUpdateMembers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMembers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMembers.Merge(m, src)
}
func (m *MsgUpdateMembers) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMembers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMembers proto.InternalMessageInfo

func (m *MsgUpdateMembers) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMembers) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateMembers) GetToAdd() []string {
	if m != nil {
		return m.ToAdd
	}
	return nil
}

func (m *MsgUpdateMembers) GetToRemove() []string {
	if m != nil {
		return m.ToRemove
	}
	return nil
}

type MsgUpdateMembersResponse struct {
}

func (m *MsgUpdateMembersResponse) Reset()         { *m = MsgUpdateMembersResponse{} }
func (m *MsgUpdateMembersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMembersResponse) ProtoMessage()    {}
func (*MsgUpdateMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad5475f4c184c4e6, []int{13}
}
func (m *MsgUpdateMembersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMembersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMembersResponse.Merge(m, src)
}
func (m *MsgUpdateMembersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMembersResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterIssuer)(nil), "archive.identity.MsgRegisterIssuer")
	proto.RegisterType((*MsgRegisterIssuerResponse)(nil), "archive.identity.MsgRegisterIssuerResponse")
	proto.RegisterType((*MsgIssueCertificate)(nil), "archive.identity.MsgIssueCertificate")
	proto.RegisterType((*MsgIssueCertificateResponse)(nil), "archive.identity.MsgIssueCertificateResponse")
	proto.RegisterType((*MsgAcceptIdentity)(nil), "archive.identity.MsgAcceptIdentity")
	proto.RegisterType((*MsgAcceptIdentityResponse)(nil), "archive.identity.MsgAcceptIdentityResponse")
	proto.RegisterType((*MsgRejectIdentity)(nil), "archive.identity.MsgRejectIdentity")
	proto.RegisterType((*MsgRejectIdentityResponse)(nil), "archive.identity.MsgRejectIdentityResponse")
	proto.RegisterType((*MsgRenounceIdentity)(nil), "archive.identity.MsgRenounceIdentity")
	proto.RegisterType((*MsgRenounceIdentityResponse)(nil), "archive.identity.MsgRenounceIdentityResponse")
	proto.RegisterType((*MsgUpdateOperators)(nil), "archive.identity.MsgUpdateOperators")
	proto.RegisterType((*MsgUpdateOperatorsResponse)(nil), "archive.identity.MsgUpdateOperatorsResponse")
	proto.RegisterType((*MsgUpdateMembers)(nil), "archive.identity.MsgUpdateMembers")
	proto.RegisterType((*MsgUpdateMembersResponse)(nil), "archive.identity.MsgUpdateMembersResponse")
}

func init() { proto.RegisterFile("archive/identity/tx.proto", fileDescriptor_ad5475f4c184c4e6) }

var fileDescriptor_ad5475f4c184c4e6 = []byte{
	// 652 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5f, 0x4f, 0xdb, 0x3e,
	0x14, 0x25, 0x6d, 0xe1, 0xf7, 0xc3, 0x88, 0x7f, 0x86, 0x49, 0x21, 0xb0, 0x52, 0x65, 0x43, 0xaa,
	0xb6, 0xd1, 0x4a, 0xf0, 0x8c, 0x26, 0x98, 0xd0, 0xe0, 0x21, 0x9a, 0x94, 0x89, 0x97, 0xbd, 0x54,
	0xae, 0x73, 0x49, 0x3c, 0x96, 0x38, 0xb2, 0x5d, 0x04, 0x5f, 0x61, 0x4f, 0xfb, 0x58, 0x7b, 0x99,
	0xc4, 0xe3, 0x5e, 0x86, 0xa6, 0xf2, 0x45, 0xa6, 0x38, 0x69, 0xa0, 0x49, 0xc3, 0x2a, 0xa4, 0xbd,
	0xd9, 0xbe, 0xe7, 0x9e, 0x7b, 0xef, 0xb1, 0x8f, 0x8c, 0x36, 0x88, 0xa0, 0x01, 0xbb, 0x84, 0x2e,
	0xf3, 0x20, 0x52, 0x4c, 0x5d, 0x77, 0xd5, 0x55, 0x27, 0x16, 0x5c, 0x71, 0xbc, 0x92, 0x85, 0x3a,
	0xa3, 0x90, 0xb5, 0xee, 0x73, 0x9f, 0xeb, 0x60, 0x37, 0x59, 0xa5, 0x38, 0xcb, 0x2e, 0x51, 0x50,
	0x10, 0x8a, 0x9d, 0x33, 0x4a, 0x14, 0xa4, 0x18, 0xfb, 0xab, 0x81, 0x56, 0x1d, 0xe9, 0xbb, 0xe0,
	0x33, 0xa9, 0x40, 0x9c, 0x4a, 0x39, 0x00, 0x81, 0x4d, 0xf4, 0x1f, 0x15, 0x40, 0x14, 0x17, 0xa6,
	0xd1, 0x32, 0xda, 0xf3, 0xee, 0x68, 0x8b, 0x31, 0x6a, 0x44, 0x24, 0x04, 0xb3, 0xa6, 0x8f, 0xf5,
	0x1a, 0xef, 0xa3, 0xc5, 0x90, 0x0b, 0xe8, 0xb1, 0xe8, 0x9c, 0xf7, 0x06, 0x82, 0x99, 0xf5, 0x24,
	0x78, 0xb4, 0x3c, 0xbc, 0xdd, 0x5e, 0x70, 0xb8, 0x80, 0xd3, 0xe8, 0x9c, 0x9f, 0x09, 0xe6, 0x2e,
	0x84, 0xf7, 0x9b, 0x84, 0x88, 0x72, 0xa9, 0xcc, 0x46, 0xcb, 0x68, 0x37, 0x5c, 0xbd, 0xb6, 0x37,
	0xd1, 0x46, 0xa9, 0x17, 0x17, 0x64, 0xcc, 0x23, 0x09, 0xf6, 0x2f, 0x03, 0xad, 0x39, 0xd2, 0xd7,
	0xa7, 0xef, 0xee, 0xe7, 0x78, 0xa4, 0xd7, 0x2d, 0x34, 0x2f, 0x80, 0xb2, 0x98, 0x41, 0xa4, 0xb2,
	0x86, 0xef, 0x0f, 0x92, 0x06, 0x24, 0xf9, 0xa2, 0xd2, 0x66, 0x5d, 0xbd, 0xc6, 0xc7, 0x68, 0x2d,
	0x04, 0x45, 0x3c, 0xa2, 0x48, 0x4f, 0xd2, 0x00, 0x42, 0xa2, 0xe7, 0x69, 0xe8, 0x79, 0x9e, 0x0d,
	0x6f, 0xb7, 0x57, 0x9d, 0x2c, 0xfc, 0x51, 0x47, 0x93, 0xa9, 0x56, 0xc3, 0xe2, 0x11, 0xde, 0x47,
	0x73, 0x01, 0x91, 0x01, 0x48, 0x73, 0xb6, 0x55, 0x6f, 0x2f, 0xec, 0x6d, 0x76, 0x8a, 0x37, 0xd6,
	0x39, 0x21, 0x32, 0x38, 0x8e, 0x94, 0xb8, 0x76, 0x33, 0xa8, 0xbd, 0x8b, 0x36, 0x27, 0x8c, 0x37,
	0x1a, 0x1f, 0x2f, 0xa1, 0x1a, 0xf3, 0xf4, 0x84, 0x0d, 0xb7, 0xc6, 0x3c, 0xfb, 0x40, 0xdf, 0xdb,
	0x21, 0xa5, 0x10, 0xab, 0xd3, 0x8c, 0xf5, 0x11, 0x2d, 0xd2, 0xf4, 0x5a, 0x9e, 0x9e, 0x4a, 0x3d,
	0x9e, 0x9e, 0x4b, 0x7d, 0x90, 0xbd, 0x89, 0xcf, 0x40, 0x9f, 0xce, 0x3d, 0x9e, 0x9e, 0x73, 0xbf,
	0xd5, 0xb7, 0xe8, 0x42, 0xc4, 0x07, 0x11, 0x85, 0x27, 0xb0, 0x3f, 0xd7, 0x3a, 0x15, 0x09, 0x72,
	0xfe, 0x18, 0x61, 0x47, 0xfa, 0x67, 0xb1, 0x47, 0x14, 0x7c, 0x88, 0x41, 0x24, 0x1c, 0x72, 0x7a,
	0x7a, 0xbc, 0x8e, 0x66, 0x15, 0x3f, 0xf4, 0x3c, 0xb3, 0xde, 0xaa, 0xb7, 0xe7, 0xdd, 0x74, 0x83,
	0x2d, 0xf4, 0xbf, 0xe2, 0x2e, 0x84, 0xfc, 0x12, 0xcc, 0x86, 0x0e, 0xe4, 0x7b, 0x7b, 0x0b, 0x59,
	0xe5, 0x8a, 0x79, 0x3f, 0x11, 0x5a, 0xc9, 0xa3, 0x0e, 0x84, 0x7d, 0xf8, 0xc7, 0xdd, 0x58, 0xc8,
	0x2c, 0xd6, 0x1b, 0xf5, 0xb2, 0xf7, 0x63, 0x16, 0xd5, 0x1d, 0xe9, 0xe3, 0x3e, 0x5a, 0x2a, 0x18,
	0xfe, 0x45, 0xf9, 0x85, 0x96, 0x9c, 0x68, 0xbd, 0x9e, 0x02, 0x94, 0xbf, 0xd7, 0x00, 0xad, 0x94,
	0xac, 0xba, 0x33, 0x91, 0xa0, 0x08, 0xb3, 0x76, 0xa7, 0x82, 0xe5, 0x95, 0xfa, 0x68, 0xa9, 0x60,
	0x83, 0xc9, 0xd3, 0x8c, 0x83, 0x2a, 0xa6, 0x99, 0xec, 0x88, 0x54, 0xb1, 0x31, 0x3b, 0x54, 0x29,
	0xf6, 0x10, 0x54, 0xa9, 0xd8, 0x24, 0x67, 0x24, 0x8a, 0x95, 0x6c, 0xb1, 0x53, 0x41, 0x30, 0x0e,
	0xab, 0x50, 0xac, 0xca, 0x23, 0x18, 0xd0, 0x72, 0xd1, 0x20, 0x2f, 0x27, 0x32, 0x14, 0x50, 0xd6,
	0x9b, 0x69, 0x50, 0x79, 0x99, 0x1e, 0x5a, 0x1c, 0x7f, 0xf7, 0xf6, 0x23, 0xe9, 0x19, 0xc6, 0x7a,
	0xf5, 0x77, 0xcc, 0xa8, 0xc0, 0xd1, 0xfb, 0xef, 0xc3, 0xa6, 0x71, 0x33, 0x6c, 0x1a, 0xbf, 0x87,
	0x4d, 0xe3, 0xdb, 0x5d, 0x73, 0xe6, 0xe6, 0xae, 0x39, 0xf3, 0xf3, 0xae, 0x39, 0xf3, 0x69, 0xd7,
	0x67, 0x2a, 0x18, 0xf4, 0x3b, 0x94, 0x87, 0xdd, 0x13, 0x12, 0x5d, 0x1c, 0x09, 0xa0, 0x17, 0xdd,
	0xd1, 0x7f, 0x78, 0xf5, 0xe0, 0x53, 0xbd, 0x8e, 0x41, 0xf6, 0xe7, 0xf4, 0x67, 0xb8, 0xff, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x33, 0x50, 0xa9, 0xff, 0x75, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RegisterIssuer(ctx context.Context, in *MsgRegisterIssuer, opts ...grpc.CallOption) (*MsgRegisterIssuerResponse, error)
	IssueCertificate(ctx context.Context, in *MsgIssueCertificate, opts ...grpc.CallOption) (*MsgIssueCertificateResponse, error)
	AcceptIdentity(ctx context.Context, in *MsgAcceptIdentity, opts ...grpc.CallOption) (*MsgAcceptIdentityResponse, error)
	RejectIdentity(ctx context.Context, in *MsgRejectIdentity, opts ...grpc.CallOption) (*MsgRejectIdentityResponse, error)
	RenounceIdentity(ctx context.Context, in *MsgRenounceIdentity, opts ...grpc.CallOption) (*MsgRenounceIdentityResponse, error)
	UpdateOperators(ctx context.Context, in *MsgUpdateOperators, opts ...grpc.CallOption) (*MsgUpdateOperatorsResponse, error)
	UpdateMembers(ctx context.Context, in *MsgUpdateMembers, opts ...grpc.CallOption) (*MsgUpdateMembersResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterIssuer(ctx context.Context, in *MsgRegisterIssuer, opts ...grpc.CallOption) (*MsgRegisterIssuerResponse, error) {
	out := new(MsgRegisterIssuerResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/RegisterIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) IssueCertificate(ctx context.Context, in *MsgIssueCertificate, opts ...grpc.CallOption) (*MsgIssueCertificateResponse, error) {
	out := new(MsgIssueCertificateResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/IssueCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AcceptIdentity(ctx context.Context, in *MsgAcceptIdentity, opts ...grpc.CallOption) (*MsgAcceptIdentityResponse, error) {
	out := new(MsgAcceptIdentityResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/AcceptIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RejectIdentity(ctx context.Context, in *MsgRejectIdentity, opts ...grpc.CallOption) (*MsgRejectIdentityResponse, error) {
	out := new(MsgRejectIdentityResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/RejectIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RenounceIdentity(ctx context.Context, in *MsgRenounceIdentity, opts ...grpc.CallOption) (*MsgRenounceIdentityResponse, error) {
	out := new(MsgRenounceIdentityResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/RenounceIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOperators(ctx context.Context, in *MsgUpdateOperators, opts ...grpc.CallOption) (*MsgUpdateOperatorsResponse, error) {
	out := new(MsgUpdateOperatorsResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/UpdateOperators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMembers(ctx context.Context, in *MsgUpdateMembers, opts ...grpc.CallOption) (*MsgUpdateMembersResponse, error) {
	out := new(MsgUpdateMembersResponse)
	err := c.cc.Invoke(ctx, "/archive.identity.Msg/UpdateMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RegisterIssuer(context.Context, *MsgRegisterIssuer) (*MsgRegisterIssuerResponse, error)
	IssueCertificate(context.Context, *MsgIssueCertificate) (*MsgIssueCertificateResponse, error)
	AcceptIdentity(context.Context, *MsgAcceptIdentity) (*MsgAcceptIdentityResponse, error)
	RejectIdentity(context.Context, *MsgRejectIdentity) (*MsgRejectIdentityResponse, error)
	RenounceIdentity(context.Context, *MsgRenounceIdentity) (*MsgRenounceIdentityResponse, error)
	UpdateOperators(context.Context, *MsgUpdateOperators) (*MsgUpdateOperatorsResponse, error)
	UpdateMembers(context.Context, *MsgUpdateMembers) (*MsgUpdateMembersResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterIssuer(ctx context.Context, req *MsgRegisterIssuer) (*MsgRegisterIssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterIssuer not implemented")
}
func (*UnimplementedMsgServer) IssueCertificate(ctx context.Context, req *MsgIssueCertificate) (*MsgIssueCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueCertificate not implemented")
}
func (*UnimplementedMsgServer) AcceptIdentity(ctx context.Context, req *MsgAcceptIdentity) (*MsgAcceptIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptIdentity not implemented")
}
func (*UnimplementedMsgServer) RejectIdentity(ctx context.Context, req *MsgRejectIdentity) (*MsgRejectIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectIdentity not implemented")
}
func (*UnimplementedMsgServer) RenounceIdentity(ctx context.Context, req *MsgRenounceIdentity) (*MsgRenounceIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenounceIdentity not implemented")
}
func (*UnimplementedMsgServer) UpdateOperators(ctx context.Context, req *MsgUpdateOperators) (*MsgUpdateOperatorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOperators not implemented")
}
func (*UnimplementedMsgServer) UpdateMembers(ctx context.Context, req *MsgUpdateMembers) (*MsgUpdateMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMembers not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterIssuer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/RegisterIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterIssuer(ctx, req.(*MsgRegisterIssuer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_IssueCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgIssueCertificate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).IssueCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/IssueCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).IssueCertificate(ctx, req.(*MsgIssueCertificate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AcceptIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAcceptIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AcceptIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/AcceptIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AcceptIdentity(ctx, req.(*MsgAcceptIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RejectIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRejectIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RejectIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/RejectIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RejectIdentity(ctx, req.(*MsgRejectIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RenounceIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRenounceIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RenounceIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/RenounceIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RenounceIdentity(ctx, req.(*MsgRenounceIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOperators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOperators)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOperators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/UpdateOperators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOperators(ctx, req.(*MsgUpdateOperators))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMembers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archive.identity.Msg/UpdateMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMembers(ctx, req.(*MsgUpdateMembers))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "archive.identity.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterIssuer",
			Handler:    _Msg_RegisterIssuer_Handler,
		},
		{
			MethodName: "IssueCertificate",
			Handler:    _Msg_IssueCertificate_Handler,
		},
		{
			MethodName: "AcceptIdentity",
			Handler:    _Msg_AcceptIdentity_Handler,
		},
		{
			MethodName: "RejectIdentity",
			Handler:    _Msg_RejectIdentity_Handler,
		},
		{
			MethodName: "RenounceIdentity",
			Handler:    _Msg_RenounceIdentity_Handler,
		},
		{
			MethodName: "UpdateOperators",
			Handler:    _Msg_UpdateOperators_Handler,
		},
		{
			MethodName: "UpdateMembers",
			Handler:    _Msg_UpdateMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "archive/identity/tx.proto",
}

func (m *MsgRegisterIssuer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterIssuer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterIssuer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Cost != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Cost))
		i--
		dAtA[i] = 0x20
	}
	if len(m.MoreInfoUri) > 0 {
		i -= len(m.MoreInfoUri)
		copy(dAtA[i:], m.MoreInfoUri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MoreInfoUri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterIssuerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterIssuerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterIssuerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgIssueCertificate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIssueCertificate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIssueCertificate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hashes) > 0 {
		for iNdEx := len(m.Hashes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Hashes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.MetadataSchemaUri) > 0 {
		i -= len(m.MetadataSchemaUri)
		copy(dAtA[i:], m.MetadataSchemaUri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MetadataSchemaUri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Salt) > 0 {
		i -= len(m.Salt)
		copy(dAtA[i:], m.Salt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Salt)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgIssueCertificateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIssueCertificateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIssueCertificateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcceptIdentity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcceptIdentity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcceptIdentity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcceptIdentityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcceptIdentityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcceptIdentityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRejectIdentity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRejectIdentity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRejectIdentity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRejectIdentityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRejectIdentityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRejectIdentityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRenounceIdentity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenounceIdentity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenounceIdentity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenounceIdentityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenounceIdentityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenounceIdentityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOperators) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOperators) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOperators) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ToRemove) > 0 {
		for iNdEx := len(m.ToRemove) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ToRemove[iNdEx])
			copy(dAtA[i:], m.ToRemove[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ToRemove[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.ToAdd) > 0 {
		for iNdEx := len(m.ToAdd) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ToAdd[iNdEx])
			copy(dAtA[i:], m.ToAdd[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ToAdd[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOperatorsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOperatorsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOperatorsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMembers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMembers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMembers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ToRemove) > 0 {
		for iNdEx := len(m.ToRemove) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ToRemove[iNdEx])
			copy(dAtA[i:], m.ToRemove[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ToRemove[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.ToAdd) > 0 {
		for iNdEx := len(m.ToAdd) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ToAdd[iNdEx])
			copy(dAtA[i:], m.ToAdd[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ToAdd[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMembersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMembersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMembersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterIssuer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MoreInfoUri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Cost != 0 {
		n += 1 + sovTx(uint64(m.Cost))
	}
	return n
}

func (m *MsgRegisterIssuerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgIssueCertificate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Salt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MetadataSchemaUri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Hashes) > 0 {
		for _, e := range m.Hashes {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgIssueCertificateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgAcceptIdentity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgAcceptIdentityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRejectIdentity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRejectIdentityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRenounceIdentity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRenounceIdentityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOperators) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if len(m.ToAdd) > 0 {
		for _, s := range m.ToAdd {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.ToRemove) > 0 {
		for _, s := range m.ToRemove {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateOperatorsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMembers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if len(m.ToAdd) > 0 {
		for _, s := range m.ToAdd {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.ToRemove) > 0 {
		for _, s := range m.ToRemove {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateMembersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterIssuer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterIssuer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterIssuer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreInfoUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MoreInfoUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cost", wireType)
			}
			m.Cost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cost |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterIssuerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterIssuerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterIssuerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIssueCertificate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIssueCertificate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIssueCertificate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Salt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataSchemaUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataSchemaUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hashes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hashes = append(m.Hashes, &HashEntry{})
			if err := m.Hashes[len(m.Hashes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIssueCertificateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIssueCertificateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIssueCertificateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcceptIdentity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcceptIdentity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcceptIdentity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcceptIdentityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcceptIdentityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcceptIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRejectIdentity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRejectIdentity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRejectIdentity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRejectIdentityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRejectIdentityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRejectIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenounceIdentity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenounceIdentity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenounceIdentity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenounceIdentityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenounceIdentityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenounceIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOperators) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOperators: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOperators: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAdd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAdd = append(m.ToAdd, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToRemove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToRemove = append(m.ToRemove, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOperatorsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOperatorsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOperatorsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMembers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMembers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMembers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAdd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAdd = append(m.ToAdd, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToRemove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToRemove = append(m.ToRemove, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMembersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMembersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMembersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
