syntax = "proto3";
package archive.cda;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cda/params.proto";
import "cda/cda.proto";
// this line is used by starport scaffolding # 1

option go_package = "archive/x/cda/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/archive/cda/params";
  }
  // Queries a list of Cda items.
	rpc Cda(QueryCdaRequest) returns (QueryCdaResponse) {
		option (google.api.http).get = "/archive/cda/cda/{id}";
	}

// Queries a list of Cdas items.
	rpc Cdas(QueryCdasRequest) returns (QueryCdasResponse) {
		option (google.api.http).get = "/archive/cda/cdas";
	}

// Queries a list of CdasOwned items.
	rpc CdasOwned(QueryCdasOwnedRequest) returns (QueryCdasOwnedResponse) {
		option (google.api.http).get = "/archive/cda/cdas_owned/{owner}";
	}

// Queries a list of Approvals items.
	rpc Approvals(QueryApprovalsRequest) returns (QueryApprovalsResponse) {
		option (google.api.http).get = "/archive/cda/approvals/{cdaId}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryCdaRequest {
  uint64 id = 1;
}

message QueryCdaResponse {
  CDA cda = 1;
}

message QueryCdasRequest {
  // Pagination to view all CDAs
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryCdasResponse {
  // List of CDA objects
  repeated CDA CDAs = 1;

  // Pagination to view all CDAs
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCdasOwnedRequest {
  // Account address for the owner
  string owner = 1;

  // Pagination to view all ids
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryCdasOwnedResponse {
  // List of CDA ids belonging to the owner
  repeated uint64 ids = 1;

  // Pagination to view all CDAs
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryApprovalsRequest {
  uint64 cdaId = 1;
}

message QueryApprovalsResponse {
  repeated string approvals = 1;
}

// this line is used by starport scaffolding # 3
