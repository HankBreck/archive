syntax = "proto3";
package archive.identity;

import "gogoproto/gogo.proto";
import "archive/identity/certificate.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "archive/x/identity/types";

// Msg defines the Msg service.
service Msg {
    rpc RegisterIssuer(MsgRegisterIssuer) returns (MsgRegisterIssuerResponse);
    rpc IssueCertificate(MsgIssueCertificate) returns (MsgIssueCertificateResponse);
    // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgRegisterIssuer {
    string creator = 1;
    string name = 2;
    string more_info_uri = 3 [ (gogoproto.customname) = "MoreInfoUri"];
    uint64 cost = 4;
}

message MsgRegisterIssuerResponse {}

message MsgIssueCertificate {
    string creator = 1;
    string recipient = 2;
    string salt = 3;
    string metadata_schema_uri = 4 [(gogoproto.customname) = "MetadataSchemaUri"];
    repeated HashEntry hashes = 5;
}

message MsgIssueCertificateResponse {
    uint64 id = 1;
}
// this line is used by starport scaffolding # proto/tx/message
