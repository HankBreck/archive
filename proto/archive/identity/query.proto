syntax = "proto3";
package archive.identity;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "archive/identity/params.proto";
// this line is used by starport scaffolding # 1
import "archive/identity/issuer.proto";

option go_package = "archive/x/identity/types";

// Query defines the gRPC querier service.
service Query {
    // Parameters queries the parameters of the module.
    rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
        option (google.api.http).get = "/archive/identity/params";
    }
    // Queries a list of IdentityMembers items.
    rpc IdentityMembers(QueryIdentityMembersRequest) returns (QueryIdentityMembersResponse) {
        option (google.api.http).get = "/archive/identity/identity_members/{id}/{is_pending}";
    }
    // Queries a list of Issuers items.
	rpc Issuers(QueryIssuersRequest) returns (QueryIssuersResponse) {
		option (google.api.http).get = "/archive/identity/issuers";
	}
    // Queries a list of IssuerInfo items.
	rpc IssuerInfo(QueryIssuerInfoRequest) returns (QueryIssuerInfoResponse) {
		option (google.api.http).get = "/archive/identity/issuer_info/{issuer}";
	}

    // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}
// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
    // params holds all the parameters of this module.
    Params params = 1 [(gogoproto.nullable) = false];
}


message QueryIdentityMembersRequest {
    uint64 id = 1;
    bool is_pending = 2 [(gogoproto.customname) = "IsPending"];
    cosmos.base.query.v1beta1.PageRequest pagination = 3;
}
message QueryIdentityMembersResponse {
    repeated string members = 1;
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryIssuersRequest {
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}
message QueryIssuersResponse {
    repeated string issuers = 1;
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryIssuerInfoRequest {
  string issuer = 1;
}
message QueryIssuerInfoResponse {
  Issuer issuer_info = 1 [(gogoproto.customname) = "IssuerInfo"];
}

// this line is used by starport scaffolding # 3
